{"version":3,"sources":["components/firebase.js","components/Posts/SubmitPost.js","components/Assets/delete.svg","components/Assets/edit.svg","components/Assets/close.svg","components/Comments/Comment.js","components/Comments/SubmitComment.js","components/Assets/speech-bubble.svg","components/Comments/RenderComments.js","components/Posts/RenderPost.js","components/Profile/UsersModal.js","components/Profile/Followers.js","components/Profile/Following.js","components/Assets/user.svg","components/Profile/Profile.js","components/Assets/home.svg","components/Assets/github.svg","components/Sidebar/Sidebar.js","components/Sidebar/WhoToFollow.js","components/Assets/logo.svg","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","SubmitPost","user","useState","postData","setPostData","db","firestore","onSubmit","e","preventDefault","isAnonymous","collection","doc","set","userID","uid","displayName","data","datePosted","FieldValue","serverTimestamp","target","reset","id","type","maxLength","onChange","value","placeholder","length","className","disabled","Comment","commentInfo","currentUser","navigateToProfile","edit","setEdit","editData","setEditData","onEdit","to","onClick","src","cancelIcon","alt","defaultValue","update","editIcon","deleteIcon","delete","SubmitComment","postInfo","currUser","changeReplyState","showReplies","commentData","setCommentData","originalPostID","RenderComments","allComments","postsComments","setPostsComments","loadingComments","setLoadingComments","useEffect","filter","comments","commentIcon","map","comment","RenderPost","post","setShowReplies","where","get","then","querySnapshot","forEach","ref","UsersModal","usersModalClick","userModalData","allUsers","userModalList","setUserModalList","push","onLinkClick","style","margin","Followers","navigateProfile","profile","setFollowButton","followers","setFollowers","modalState","setModalState","onSnapshot","followersArr","includes","Following","following","setFollowing","isFollowingArr","Profile","allPosts","loading","setLoading","setProfile","profilesPosts","setProfilesPosts","followState","setFollowState","find","followAction","userIcon","isFollowing","userInfo","Sidebar","homeIcon","githubIcon","WhoToFollow","usersNotFollowing","val","Navbar","signOut","logo","App","auth","useAuthState","setAllPosts","customTimeline","setCustomTimeline","setAllComments","setAllUsers","undefined","setNavigateProfile","unsubscribeCustomTimeline","orderBy","customTimelineData","unsubscribeAllPosts","userData","exact","path","provider","GoogleAuthProvider","signInWithPopup","signInAnonymously","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.293ca924.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBukyt4EroXxaVMBVOP7Nh6uYwfdpqY3WE\",\n    authDomain: \"holl-r.firebaseapp.com\",\n    projectId: \"holl-r\",\n    storageBucket: \"holl-r.appspot.com\",\n    messagingSenderId: \"8271554529\",\n    appId: \"1:8271554529:web:4376a6890037eb6d6294a0\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase","import firebase from \"firebase\"\nimport { useState } from \"react\"\nimport '../Styles/SubmitPost.css'\n\nconst SubmitPost = ({ user }) => {\n    const [postData, setPostData] = useState('')\n    const db = firebase.firestore()\n\n    const addData = (e) => {\n        setPostData(e.target.value)\n    }\n\n    //Updates the database with new post and post details\n    const submitNewPost = (e) => {\n        e.preventDefault()\n\n        if (user.isAnonymous) {\n            db.collection('Posts').doc().set({\n                userID: user.uid,\n                displayName: `Anon #${user.uid}`,\n                data: postData,\n                datePosted: firebase.firestore.FieldValue.serverTimestamp()\n            })\n        } else {\n            db.collection('Posts').doc().set({\n                userID: user.uid,\n                displayName: user.displayName,\n                data: postData,\n                datePosted: firebase.firestore.FieldValue.serverTimestamp()\n            })\n        }\n\n        setPostData('')\n        e.target.reset()\n    }\n\n    return (\n        <form onSubmit={submitNewPost} id=\"submitPostForm\">\n            <textarea type='text' maxLength=\"250\" onChange={addData} placeholder=\"How are you feeling?\" />\n            {\n                postData.length < 1\n                    ? <button className='submitPostBtn' type='submit' disabled>Post</button>\n                    : <button className='submitPostBtn' type='submit'>Post</button>\n            }\n        </form>\n    )\n}\n\nexport default SubmitPost","export default __webpack_public_path__ + \"static/media/delete.e4efcb06.svg\";","export default __webpack_public_path__ + \"static/media/edit.3c70b537.svg\";","export default __webpack_public_path__ + \"static/media/close.b7a9c534.svg\";","import firebase from \"firebase\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport deleteIcon from '../Assets/delete.svg'\nimport editIcon from '../Assets/edit.svg'\nimport cancelIcon from '../Assets/close.svg'\n\nconst Comment = ({ commentInfo, currentUser, navigateToProfile }) => {\n    const [edit, setEdit] = useState(false)\n    const [editData, setEditData] = useState('')\n\n    const onDelete = () => {\n        const db = firebase.firestore()\n        db.collection('Comments').doc(commentInfo.id).delete()\n    }\n\n    const onEdit = () => {\n        setEdit(!edit)\n    }\n\n    const addEditData = (e) => {\n        setEditData(e.target.value)\n    }\n\n    const onEditSubmit = () => {\n        const db = firebase.firestore();\n        db.collection(\"Comments\").doc(commentInfo.id).update({ data: editData });\n        setEditData('')\n        setEdit(!edit)\n    }\n\n    return (\n        <div className='comments'>\n            <div key={commentInfo.id} >\n                {\n                    currentUser.uid === commentInfo.userID\n                        ? <div className='comment-top'>\n                            <Link to={`/profile/${commentInfo.userID}`} onClick={navigateToProfile} id={commentInfo.userID} className='username'>{commentInfo.displayName}</Link>\n                            <div className='post-top-right'>\n                                {\n                                    edit\n                                        ? <div className='editPostModal'>\n                                            <div className='modal-box'>\n                                                <h3 className='edit-modal-username'>{currentUser.isAnonymous ? \"Anonymous\" : currentUser.displayName}</h3>\n                                                <img src={cancelIcon} alt='cancel edit' className='cancelEditBtn' onClick={onEdit} />\n                                                <textarea className='modal-text' type='text' maxLength='220' onChange={addEditData} defaultValue={commentInfo.data} />\n                                                {editData.length > 0 ? <button className='submitEditBtn' onClick={onEditSubmit}>Submit</button> : <button className='submitEditBtnDisabled'>Submit</button>}\n                                            </div>\n                                        </div>\n                                        : <img src={editIcon} alt='delete' className='post-action-buttons' onClick={onEdit} />\n                                }\n                                <img src={deleteIcon} alt='delete' className='post-action-buttons' onClick={onDelete} />\n                            </div>\n                        </div>\n                        : <div>\n                            <Link to={`/profile/${commentInfo.userID}`} onClick={navigateToProfile} id={commentInfo.userID} className='username'>{commentInfo.displayName}</Link>\n\n                        </div>\n                }\n                <p className=\"postData\">{commentInfo.data}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Comment","import firebase from \"firebase\"\nimport { useState } from \"react\"\nimport '../Styles/Post.css'\n\n\nconst SubmitComment = ({ postInfo, currUser, changeReplyState, showReplies }) => {\n    const [commentData, setCommentData] = useState('')\n    const db = firebase.firestore()\n\n    const getCommentData = (e) => {\n        setCommentData(e.target.value)\n    }\n\n    //Uploads comment to database with relevant details\n    const submitNewComment = (e) => {\n        e.preventDefault()\n\n        if (currUser.isAnonymous) {\n            db.collection('Comments').doc().set({\n                originalPostID: postInfo.id,\n                userID: currUser.uid,\n                displayName: `Anon #${currUser.uid}`,\n                data: commentData,\n                datePosted: firebase.firestore.FieldValue.serverTimestamp()\n            })\n        } else {\n            db.collection('Comments').doc().set({\n                originalPostID: postInfo.id,\n                userID: currUser.uid,\n                displayName: currUser.displayName,\n                data: commentData,\n                datePosted: firebase.firestore.FieldValue.serverTimestamp()\n            })\n        }\n\n        setCommentData('')\n        !showReplies && changeReplyState()\n        e.target.reset()\n    }\n\n    return (\n        <form onSubmit={submitNewComment} className=\"submitCommentForm\">\n            <textarea id=\"commentTextArea\" type='text' maxLength=\"220\" placeholder=\"Share your opinion!\" onChange={getCommentData} />\n            {commentData.length > 0 ? <button className='postCommentBtn' type='submit'>Comment</button> : <button className='postCommentBtn' disabled>Comment</button>}\n        </form>\n    )\n}\n\nexport default SubmitComment","export default __webpack_public_path__ + \"static/media/speech-bubble.bbfaa137.svg\";","import { useEffect, useState } from \"react\"\nimport Comment from \"./Comment\";\nimport SubmitComment from \"./SubmitComment\";\nimport '../Styles/Post.css'\nimport commentIcon from '../Assets/speech-bubble.svg'\n\nconst RenderComments = ({ postInfo, currUser, allComments, navigateToProfile, showReplies, changeReplyState }) => {\n    const [postsComments, setPostsComments] = useState('')\n    const [loadingComments, setLoadingComments] = useState(true)\n\n    useEffect(() => {\n        // Gets all comments relating to a specific post\n        setPostsComments(allComments.filter((comments) => comments.originalPostID === postInfo.id))\n        setLoadingComments(false)\n    }, [postInfo, allComments])\n\n    return (\n        <div className='showReplies'>\n            {loadingComments\n                ? <p>Loading...</p>\n                : <div className='repliesBtn'>\n                    <img src={commentIcon} alt='comment' onClick={changeReplyState} />\n                    <span >{postsComments.length > 0 && postsComments.length}</span>\n                </div>}\n\n            {showReplies\n                &&\n                <div>\n                    <SubmitComment postInfo={postInfo} currUser={currUser} changeReplyState={changeReplyState} showReplies={showReplies} />\n                    {postsComments.map((comment) => {\n                        return (\n                            <Comment currentUser={currUser} navigateToProfile={navigateToProfile} commentInfo={comment} key={comment.id} />\n                        )\n                    })}\n                </div>}\n        </div >\n    )\n}\n\nexport default RenderComments","import firebase from \"firebase\";\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport RenderComments from \"../Comments/RenderComments\";\nimport deleteIcon from '../Assets/delete.svg'\nimport editIcon from '../Assets/edit.svg'\nimport cancelIcon from '../Assets/close.svg'\n\nconst RenderPost = ({ currUser, post, allComments, navigateToProfile }) => {\n    const [showReplies, setShowReplies] = useState(false)\n    const [edit, setEdit] = useState(false)\n    const [editData, setEditData] = useState('')\n\n    //Deletes post from database\n    const onDelete = () => {\n        const db = firebase.firestore()\n        db.collection('Posts').doc(post.id).delete()\n\n        const commentQuery = db.collection('Comments').where('originalPostID', '==', post.id)\n        commentQuery.get().then(function (querySnapshot) {\n            querySnapshot.forEach(function (doc) {\n                doc.ref.delete();\n            });\n        })\n    }\n\n    const onEdit = () => {\n        setEdit(!edit)\n    }\n\n    const addEditData = (e) => {\n        setEditData(e.target.value)\n    }\n\n    //Resubmits post with editied data to the database\n    const onEditSubmit = () => {\n        const db = firebase.firestore();\n        db.collection(\"Posts\").doc(post.id).update({ data: editData });\n        setEditData('')\n        setEdit(!edit)\n    }\n\n    //toggles the ability to see comments relating to a post\n    const changeReplyState = () => {\n        setShowReplies(!showReplies)\n    }\n\n    return (\n        <div className='post' key={post.id}>\n            <div className='post-top'>\n                <Link to={`/profile/${post.userID}`} onClick={navigateToProfile} id={post.userID} className='username'>{post.displayName}</Link>\n                {\n                    currUser.uid === post.userID &&\n                    <div className='post-top-right'>\n                        {\n                            edit\n                                ? <div className='editPostModal'>\n                                    <div className='modal-box'>\n                                        <h3 className='edit-modal-username'>{currUser.isAnonymous ? \"Anonymous\" : currUser.displayName}</h3>\n                                        <img src={cancelIcon} alt='cancel edit' className='cancelEditBtn' onClick={onEdit} />\n                                        <textarea className='modal-text' type='text' maxLength='250' onChange={addEditData} defaultValue={post.data} />\n                                        {editData.length > 0 ? <button className='submitEditBtn' onClick={onEditSubmit}>Submit</button> : <button className='submitEditBtnDisabled'>Submit</button>}\n                                    </div>\n                                </div>\n                                : <img src={editIcon} alt='edit' className='post-action-buttons' onClick={onEdit} />\n                        }\n                        <img src={deleteIcon} alt='delete' className='post-action-buttons' onClick={onDelete} />\n                    </div>\n                }\n            </div>\n            <p className='postData'>{post.data}</p>\n            <div className='post-bottom'>\n                <RenderComments postInfo={post} currUser={currUser} allComments={allComments} navigateToProfile={navigateToProfile} changeReplyState={changeReplyState} showReplies={showReplies} />\n            </div>\n        </div>\n    )\n}\n\nexport default RenderPost","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport cancelIcon from '../Assets/close.svg'\n\nconst UsersModal = ({ usersModalClick, userModalData, allUsers, navigateToProfile, type }) => {\n\n    const [userModalList, setUserModalList] = useState([])\n\n    //Renders a list of following/follwers user accounts to display in modal\n    useEffect(() => {\n        const userModalList = []\n        allUsers.filter((user) => {\n            return (userModalData.forEach(data => {\n                return user.uid === data ? userModalList.push(user) : null\n            }));\n        })\n        setUserModalList(userModalList)\n    }, [userModalData, allUsers])\n\n    const onLinkClick = (e) => {\n        usersModalClick()\n        navigateToProfile(e)\n    }\n\n    return (\n        <div className='users-modal'>\n            <img src={cancelIcon} alt='cancel edit' className='cancelEditBtn' onClick={usersModalClick} />\n            <div className='allUsers'>\n                <h2 style={{ margin: '5px' }}>{type}</h2>\n                {userModalList.map((user) => {\n                    return (\n                        <div key={user.uid} className='users-profile'>\n                            <hr />\n                            <Link className='username' to={`/profile/${user.uid}`} id={user.uid} onClick={onLinkClick}> {user.displayName} </Link>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\nexport default UsersModal","import { useEffect, useState } from \"react\"\nimport firebase from \"firebase\"\nimport UsersModal from \"./UsersModal\"\n\nconst Followers = ({ navigateProfile, profile, currUser, setFollowButton, allUsers, navigateToProfile }) => {\n    const [followers, setFollowers] = useState([])\n    const [modalState, setModalState] = useState(false)\n\n    //Get current users followers accounts\n    useEffect(() => {\n        const db = firebase.firestore()\n\n        const unsubscribe = db.collection(\"Users\").doc(navigateProfile)\n            .collection('Followers').onSnapshot((querySnapshot) => {\n                const followersArr = []\n                querySnapshot.forEach(doc => {\n                    followersArr.push(doc.id)\n                });\n                setFollowers(followersArr)\n                followersArr.includes(currUser.uid) ? setFollowButton(true) : setFollowButton(false)\n            });\n        return unsubscribe\n\n    }, [navigateProfile, profile, currUser, setFollowButton])\n\n    const usersModalClick = () => {\n        setModalState(!modalState)\n    }\n\n    return (\n        <div className='following-followers'>\n            <h3 className='following-follower-title' onClick={usersModalClick}>{followers.length} Followers</h3>\n            {modalState && <UsersModal type={'Followers'} usersModalClick={usersModalClick} userModalData={followers} allUsers={allUsers} navigateToProfile={navigateToProfile} />}\n        </div>\n    )\n}\n\nexport default Followers","import { useEffect, useState } from \"react\"\nimport firebase from \"firebase\"\nimport UsersModal from \"./UsersModal\"\n\n\nconst Following = ({ navigateProfile, profile, currUser, allUsers, navigateToProfile }) => {\n    const [following, setFollowing] = useState([])\n    const [modalState, setModalState] = useState(false)\n\n    // Get current users followings accounts\n    useEffect(() => {\n        const db = firebase.firestore()\n\n        const unsubscribe = db.collection(\"Users\").doc(navigateProfile)\n            .collection('Following').onSnapshot((querySnapshot) => {\n                const isFollowingArr = []\n                querySnapshot.forEach(doc => {\n                    isFollowingArr.push(doc.id)\n                });\n                setFollowing(isFollowingArr)\n            });\n        return unsubscribe\n\n    }, [navigateProfile, profile, currUser])\n\n    const usersModalClick = () => {\n        setModalState(!modalState)\n    }\n\n    return (\n        <div className='following-followers'>\n            <h3 className='following-follower-title' onClick={usersModalClick}>{following.length} Following</h3>\n            {modalState && <UsersModal usersModalClick={usersModalClick} userModalData={following} allUsers={allUsers} navigateToProfile={navigateToProfile} type={'Following'} />}\n        </div>\n    )\n}\n\nexport default Following","export default __webpack_public_path__ + \"static/media/user.81d7b418.svg\";","import { useEffect, useState } from \"react\"\nimport firebase from \"firebase\"\nimport RenderPost from \"../Posts/RenderPost\"\nimport Followers from \"./Followers\"\nimport Following from \"./Following\"\nimport '../Styles/Profile.css'\nimport userIcon from '../Assets/user.svg'\n\nconst Profile = ({ currUser, allUsers, navigateProfile, allPosts, allComments, navigateToProfile }) => {\n    const [loading, setLoading] = useState(false)\n    const [profile, setProfile] = useState()\n    const [profilesPosts, setProfilesPosts] = useState()\n    const [followState, setFollowState] = useState(false)\n    const db = firebase.firestore()\n\n    useEffect(() => {\n\n        //Gets the profile from allUsers \n        setProfile(allUsers.find((user) => user.uid === navigateProfile))\n        // Gets all the posts that match with the profile page currently navigated to\n        setProfilesPosts(allPosts.filter((post) => post.userID === navigateProfile))\n\n        setLoading(true)\n    }, [allUsers, navigateProfile, allPosts, allComments])\n\n    //When a user follows/unfollows a profile database will update the current user and the profiles followers/following collection\n    const followAction = () => {\n        if (!followState) {\n            db.collection(\"Users\").doc(profile.uid).collection('Followers').doc(currUser.uid).set({\n                following: !followState\n            });\n            db.collection(\"Users\").doc(currUser.uid).collection('Following').doc(profile.uid).set({\n                following: !followState\n            });\n            setFollowState(!followState)\n        } else {\n            db.collection(\"Users\").doc(profile.uid).collection('Followers').doc(currUser.uid).delete()\n            db.collection(\"Users\").doc(currUser.uid).collection('Following').doc(profile.uid).delete()\n            setFollowState(!followState)\n        }\n    }\n\n    const setFollowButton = (isFollowing) => {\n        setFollowState(isFollowing)\n    }\n\n    return (\n        <div className=\"profile\">\n            {loading\n                ? <div className='profile-main'>\n                    <div className='profile-top'>\n                        <img src={userIcon} alt='profile' className='profile-pic' />\n                        <h1 className='profile-username'>{profile.displayName}</h1>\n                        {\n                            currUser.uid === profile.uid\n                                ? null\n                                : followState ? <button className='followBtn' onClick={followAction}>Unfollow</button> : <button className='followBtn' onClick={followAction}>Follow</button>\n                        }\n                    </div>\n                    <div className='followers-panel'>\n                        <Followers navigateProfile={navigateProfile} profile={profile} currUser={currUser} setFollowButton={setFollowButton} allUsers={allUsers} navigateToProfile={navigateToProfile} />\n                        <Following navigateProfile={navigateProfile} profile={profile} currUser={currUser} allUsers={allUsers} navigateToProfile={navigateToProfile} />\n                    </div>\n\n                    {profilesPosts.map((post) => {\n                        return (\n                            <RenderPost currUser={currUser} post={post} userInfo={profile} allComments={allComments} navigateToProfile={navigateToProfile} key={post.id} />\n                        )\n                    })}\n                    {profilesPosts.length < 1 && <h2>You have no posts :(</h2>}\n                </div>\n                : <h2>loading...</h2>\n            }\n        </div>\n    )\n}\n\nexport default Profile","export default __webpack_public_path__ + \"static/media/home.b0189fdb.svg\";","export default __webpack_public_path__ + \"static/media/github.3ba4a27c.svg\";","import { Link } from \"react-router-dom\"\nimport '../Styles/Sidebar.css'\nimport homeIcon from '../Assets/home.svg'\nimport githubIcon from '../Assets/github.svg'\nimport userIcon from '../Assets/user.svg'\n\nconst Sidebar = ({ navigateToProfile, user }) => {\n    return (\n        <div id='sidebar'>\n            <div className='sidebar-button-panel'>\n                <Link to={`/hollr`} className='sideBarBtns'>\n                    <img src={homeIcon} alt=\"home\" className='sidebar-icon' />\n                    <p className='sidebar-btn-text'>Home</p>\n                </Link>\n            </div>\n\n            <div className='sidebar-button-panel'>\n                <Link to={\"//github.com/Yasin2201/hollr\"} target=\"_blank\" className='sideBarBtns'>\n                    <img src={githubIcon} alt=\"github\" className='sidebar-icon' />\n                    <p className='sidebar-btn-text'>Github</p>\n                </Link>\n            </div>\n\n            <div className='sidebar-button-panel'>\n                <Link to={`/profile/${user.uid}`} className='sideBarBtns' id={user.uid} onClick={navigateToProfile}>\n                    <img src={userIcon} alt=\"profile\" className='sidebar-icon' id={user.uid} />\n                    <p className='sidebar-btn-text' id={user.uid}>Your Profile</p>\n                </Link>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Sidebar","import { Link } from \"react-router-dom\"\nimport '../Styles/WhoToFollow.css'\n\nconst WhoToFollow = ({ allUsers, currUser, following, navigateToProfile }) => {\n\n    //Filter current users followers out of all available users, to create a list of recommended accounts to follow\n    const usersNotFollowing = allUsers.filter(val => !following.includes(val.uid)).filter((user) => user.uid !== currUser.uid);\n\n    return (\n        <div id='whoToFollow-sidebar'>\n            <div className='not-following-container'>\n                <h2 className='whoToFollow-title'>Who To Follow</h2>\n                {usersNotFollowing.map((user) => {\n                    return (\n                        <div key={user.uid} className=\"users-follow\">\n                            <Link to={`/profile/${user.uid}`} onClick={navigateToProfile} id={user.uid} className='username'>{user.displayName}</Link>\n                        </div>\n                    )\n                })}\n                {usersNotFollowing.length < 1 && <h3>Nothing to see here...</h3>}\n            </div>\n        </div>\n    )\n}\n\nexport default WhoToFollow","export default __webpack_public_path__ + \"static/media/logo.22ebc026.svg\";","import { Link } from \"react-router-dom\"\nimport './Styles/Navbar.css'\nimport logo from './Assets/logo.svg'\n\nconst Navbar = ({ user, signOut }) => {\n    return (\n        <div id='navbar'>\n            <Link to='/hollr' className='title'>\n                <h1 className=\"logoHeader\">holl'r</h1>\n            </Link>\n            <Link to='/hollr' className='title'>\n                <img src={logo} alt='hollr logo' className='logo' />\n            </Link>\n            <div className='navActions'>\n                <h3 className='greeting'>Hello, {user.isAnonymous ? user.uid : user.displayName}!</h3>\n                <Link to={`/hollr`} className='navActions'>\n                    <button className='signOut' onClick={signOut}>Sign Out</button>\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar","import firebase from \"./components/firebase\";\nimport { useEffect, useState } from \"react\";\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\"\nimport SubmitPost from './components/Posts/SubmitPost'\nimport RenderPost from \"./components/Posts/RenderPost\";\nimport Profile from \"./components/Profile/Profile\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\nimport WhoToFollow from \"./components/Sidebar/WhoToFollow\";\nimport Navbar from \"./components/Navbar\";\nimport './components/Styles/App.css'\n\nconst App = () => {\n    const auth = firebase.auth()\n    const [user] = useAuthState(auth)\n    const [allPosts, setAllPosts] = useState([])\n    const [customTimeline, setCustomTimeline] = useState([])\n    const [allComments, setAllComments] = useState([])\n    const [allUsers, setAllUsers] = useState([])\n    const [navigateProfile, setNavigateProfile] = useState(undefined)\n    const [following, setFollowing] = useState([])\n\n    const signIn = () => {\n        const provider = new firebase.auth.GoogleAuthProvider();\n        auth.signInWithPopup(provider);\n    }\n\n    const signInAnonymously = () => {\n        firebase.auth().signInAnonymously();\n    }\n\n    const signOut = () => {\n        auth.signOut()\n    }\n\n    //Get current users following status from database\n    useEffect(() => {\n        const db = firebase.firestore()\n\n        if (user !== null) {\n            const unsubscribe = db.collection(\"Users\").doc(user.uid)\n                .collection('Following').onSnapshot((querySnapshot) => {\n                    const isFollowingArr = []\n                    querySnapshot.forEach(doc => {\n                        isFollowingArr.push(doc.id)\n                    });\n                    setFollowing(isFollowingArr)\n                });\n            return unsubscribe\n        }\n\n    }, [user])\n\n    // get all submitted posts from database and create a custom timeline for current user depending on \n    // who they're following also get ALL posts from database\n    useEffect(() => {\n        const db = firebase.firestore()\n\n        if (user !== null) {\n            const unsubscribeCustomTimeline = db.collection(\"Posts\")\n                .orderBy(\"datePosted\", \"desc\")\n                .onSnapshot((querySnapshot) => {\n                    const customTimelineData = []\n                    querySnapshot.forEach((doc) => following.includes(doc.data().userID) || doc.data().userID === user.uid ? customTimelineData.push({ ...doc.data(), id: doc.id }) : null)\n                    setCustomTimeline(customTimelineData)\n                });\n\n            const unsubscribeAllPosts = db.collection(\"Posts\")\n                .orderBy(\"datePosted\", \"desc\")\n                .onSnapshot((querySnapshot) => {\n                    const postData = []\n                    querySnapshot.forEach((doc) => postData.push({ ...doc.data(), id: doc.id }))\n                    setAllPosts(postData)\n                });\n            return { unsubscribeCustomTimeline, unsubscribeAllPosts }\n        }\n    }, [following, user])\n\n    //Get all submitted comments from database\n    useEffect(() => {\n        const db = firebase.firestore()\n\n        const unsubscribe = db.collection(\"Comments\")\n            .orderBy(\"datePosted\", \"desc\")\n            .onSnapshot((querySnapshot) => {\n                const commentData = []\n                querySnapshot.forEach((doc) => commentData.push({ ...doc.data(), id: doc.id }))\n                setAllComments(commentData)\n            });\n        return unsubscribe\n    }, [])\n\n    //Get ALL users who have an account anonymous or not information\n    useEffect(() => {\n        const db = firebase.firestore()\n\n        const unsubscribe = db.collection(\"Users\").onSnapshot((querySnapshot) => {\n            const userData = []\n            querySnapshot.forEach((doc) => userData.push({ ...doc.data(), uid: doc.id }))\n            setAllUsers(userData)\n        });\n        return unsubscribe\n    }, [])\n\n    // Set a displayName for the current user\n    useEffect(() => {\n        const db = firebase.firestore()\n\n        if (user !== null && !user.isAnonymous) {\n            const unsubscribe = db.collection('Users').doc(user.uid).set({\n                displayName: user.displayName\n            })\n            return unsubscribe\n        } else if (user !== null && user.isAnonymous) {\n            const unsubscribe = db.collection(\"Users\").doc(user.uid).set({\n                displayName: `Anon #${user.uid}`\n            })\n            return unsubscribe\n        }\n    }, [user])\n\n    // Get the UID of the profile user is navigating to \n    const navigateToProfile = (e) => {\n        setNavigateProfile(allUsers.find((user) => user.uid === e.target.id).uid)\n    }\n\n    return (\n        <BrowserRouter>\n            <div className=\"main\">\n                {user\n                    ? <div className=\"mainBody\">\n                        <Navbar user={user} signOut={signOut} />\n                        <Sidebar navigateToProfile={navigateToProfile} navigateProfile={navigateProfile} user={user} />\n                        <WhoToFollow allUsers={allUsers} currUser={user} following={following} navigateToProfile={navigateToProfile} />\n                        <Switch>\n                            <Route exact path='/hollr'>\n                                <div id='allPosts'>\n                                    <SubmitPost user={user} />\n                                    {customTimeline.map((post) => {\n                                        return (\n                                            <RenderPost post={post} currUser={user} key={post.id} allComments={allComments} navigateToProfile={navigateToProfile} />\n                                        )\n                                    })}\n                                </div>\n                            </Route>\n                            <Route exact path={`/profile/${navigateProfile}`}>\n                                <Profile currUser={user} allUsers={allUsers} navigateProfile={navigateProfile} allComments={allComments} allPosts={allPosts} navigateToProfile={navigateToProfile} />\n                            </Route>\n                        </Switch>\n                    </div>\n                    : <div className='signIn-Container'>\n                        <div className='signIn-buttons-container'>\n                            <h1>Welcome to holl'r</h1>\n                            <button className='signIn-buttons' onClick={signIn}>Sign In with Google</button>\n                            <span>OR</span>\n                            <button className='signIn-buttons' onClick={signInAnonymously}>Sign In Anonymously</button>\n                        </div>\n                    </div>}\n            </div>\n        </BrowserRouter>\n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}